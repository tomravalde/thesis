  scale_x_discrete(limits=meas.all[length(meas.all):1]) +
  scale_y_discrete(limits=meas.all) +
  theme_bw() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank())
plot.corr.all
plot.corr.all
heat.map.labels <- read.csv("heat-map-labels.csv")
corr.all.ids <- inner_join(corr.all.ids, heat.map.labels, by=c("y"="metric"))
## Show correlation on a heat map
plot.corr.all <- ggplot(corr.all.lower, aes(x, y, fill=correlation)) +
  geom_tile() +
  facet_wrap( ~ year, ncol=1) +
  geom_text(data=corr.all.ids, aes(label=label), size=2, hjust=0.1) +
  scale_fill_gradient2(low = "red",
      high = "steelblue",
      limits=c(-1,1),
      name = expression(paste(rho))) +
  scale_x_discrete(limits=meas.all[length(meas.all):1]) +
  scale_y_discrete(limits=meas.all) +
  theme_bw() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank())
plot.corr.all
## Show correlation on a heat map
plot.corr.all <- ggplot(corr.all.lower, aes(x, y, fill=correlation)) +
  geom_tile() +
#  facet_wrap( ~ year, ncol=1) +
  geom_text(data=corr.all.ids, aes(label=label), size=2, hjust=0.1) +
  scale_fill_gradient2(low = "red",
      high = "steelblue",
      limits=c(-1,1),
      name = expression(paste(rho))) +
  scale_x_discrete(limits=meas.all[length(meas.all):1]) +
  scale_y_discrete(limits=meas.all) +
  theme_bw() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank())
plot.corr.all
head(corr.all.lower)
subset(corr.all.lower
subset(corr.all.lower, year="2015")
subset(corr.all.lower, year="2011")
subset(corr.all.lower, year="2011")plot.corr.all <- ggplot(subset(corr.all.lower, year="2011"),
aes(x, y, fill=correlation)) +
  geom_tile() +
  facet_wrap( ~ year, ncol=1) +
  geom_text(data=corr.all.ids, aes(label=label), size=2, hjust=0.1) +
  scale_fill_gradient2(low = "red",
      high = "steelblue",
      limits=c(-1,1),
      name = expression(paste(rho))) +
  scale_x_discrete(limits=meas.all[length(meas.all):1]) +
  scale_y_discrete(limits=meas.all) +
  theme_bw() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank())
plot.corr.all
plot.corr.all
## Make nicer labels for the heat map plot
heat.map.labels <- read.csv("heat-map-labels.csv")
corr.all.ids <- inner_join(corr.all.ids, heat.map.labels, by=c("y"="metric"))
## Show correlation on a heat map
plot.corr.all <- ggplot(subset(corr.all.lower, year="2001"),
aes(x, y, fill=correlation)) +
  geom_tile() +
  facet_wrap( ~ year, ncol=1) +
  geom_text(data=corr.all.ids, aes(label=label), size=2, hjust=0.1) +
  scale_fill_gradient2(low = "red",
      high = "steelblue",
      limits=c(-1,1),
      name = expression(paste(rho))) +
  scale_x_discrete(limits=meas.all[length(meas.all):1]) +
  scale_y_discrete(limits=meas.all) +
  theme_bw() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank())
plot.corr.all
heat.map.labels <- read.csv("heat-map-labels.csv")
corr.all.ids <- inner_join(corr.all.ids, heat.map.labels, by=c("y"="metric"))
## Show correlation on a heat map
plot.corr.all <- ggplot(subset(corr.all.lower, year="2001"),
aes(x, y, fill=correlation)) +
  geom_tile() +
  facet_wrap( ~ year, ncol=1) +
  geom_text(data=corr.all.ids, aes(label=label), size=2, hjust=0.1) +
  scale_fill_gradient2(low = "red",
      high = "steelblue",
      limits=c(-1,1),
      name = expression(paste(rho))) +
  scale_x_discrete(limits=meas.all[length(meas.all):1]) +
  scale_y_discrete(limits=meas.all) +
  theme_bw() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank())
plot.corr.all
subset(corr.all.lower, year="2001")
head(subset(corr.all.lower, year="2001"))
head(subset(corr.all.lower, year="2011"))
head(subset(corr.all.lower, year=="2011"))
## Make nicer labels for the heat map plot
heat.map.labels <- read.csv("heat-map-labels.csv")
corr.all.ids <- inner_join(corr.all.ids, heat.map.labels, by=c("y"="metric"))
## Show correlation on a heat map
plot.corr.all <- ggplot(subset(corr.all.lower, year=="2001"),
aes(x, y, fill=correlation)) +
  geom_tile() +
  facet_wrap( ~ year, ncol=1) +
  geom_text(data=corr.all.ids, aes(label=label), size=2, hjust=0.1) +
  scale_fill_gradient2(low = "red",
      high = "steelblue",
      limits=c(-1,1),
      name = expression(paste(rho))) +
  scale_x_discrete(limits=meas.all[length(meas.all):1]) +
  scale_y_discrete(limits=meas.all) +
  theme_bw() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank())
plot.corr.all
## Make nicer labels for the heat map plot
heat.map.labels <- read.csv("heat-map-labels.csv")
corr.all.ids <- inner_join(corr.all.ids, heat.map.labels, by=c("y"="metric"))
## Show correlation on a heat map
plot.corr.all <- ggplot(subset(corr.all.lower, year=="2001"),
aes(x, y, fill=correlation)) +
  geom_tile() +
  facet_wrap( ~ year, ncol=1) +
  geom_text(data=corr.all.ids, aes(label=label), size=2, hjust=0.1) +
  scale_fill_gradient2(low = "red",
      high = "steelblue",
      limits=c(-1,1),
      name = expression(paste(rho))) +
  scale_x_discrete(limits=meas.all[length(meas.all):1]) +
  scale_y_discrete(limits=meas.all) +
  theme_bw() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank())
plot.corr.all
corr.all.lower
corr.all.2011 <- subset(corr.all.lower, year=="2011")
## Show correlation on a heat map
plot.corr.all <- ggplot(corr.all.lower.2015, aes(x, y, fill=correlation)) +
  geom_tile() +
  facet_wrap( ~ year, ncol=1) +
  geom_text(data=corr.all.ids.2015 aes(label=label), size=2, hjust=0.1) +
  scale_fill_gradient2(low = "red",
      high = "steelblue",
      limits=c(-1,1),
      name = expression(paste(rho))) +
  scale_x_discrete(limits=meas.all[length(meas.all):1]) +
  scale_y_discrete(limits=meas.all) +
  theme_bw() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank())
plot.corr.all
corr.all.ids.2011 <- subset(corr.all.ids, year=="2011")
corr.all.ids.2011
q()
plot.corr.2011 <- ggplot(corr.all.lower.2011, aes(x, y, fill=correlation)) +
  geom_tile() +
#  facet_wrap( ~ year, ncol=1) +
  geom_text(data=corr.all.ids.2011, aes(label=label), size=2, hjust=0.1) +
  scale_fill_gradient2(low = "red",
      high = "steelblue",
      limits=c(-1,1),
      name = expression(paste(rho))) +
  scale_x_discrete(limits=meas.all[length(meas.all):1]) +
  scale_y_discrete(limits=meas.all) +
  theme_bw() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank())
plot.corr.2011
corr.all.lower.2011 <- subset(corr.all.lower, year=="2011")
corr.all.ids.2011 <- subset(corr.all.ids, year=="2011")
plot.corr.2011 <- ggplot(corr.all.lower.2011, aes(x, y, fill=correlation)) +
  geom_tile() +
#  facet_wrap( ~ year, ncol=1) +
  geom_text(data=corr.all.ids.2011, aes(label=label), size=2, hjust=0.1) +
  scale_fill_gradient2(low = "red",
      high = "steelblue",
      limits=c(-1,1),
      name = expression(paste(rho))) +
  scale_x_discrete(limits=meas.all[length(meas.all):1]) +
  scale_y_discrete(limits=meas.all) +
  theme_bw() +
  theme(axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank())
plot.corr.2011
library('ReporteRs')
doc <- pptx()
doc <- addSlide(doc, "Two Content")
doc <- addPlot(doc, function() print(plot.corr.2011), vector.graphic = TRUE )
doc <- addPlot(doc, function() print(plot.corr.2011), vector.graphic = FALSE )
writeDoc(doc, file = "editable-heatmap.pptx")
corr.all.lower.2011
q()
## Make PowerPoint version
library('ReporteRs')
doc <- pptx()
doc <- addSlide(doc, "Two Content")
doc <- addPlot(doc, function() print(plot.metric.2011), vector.graphic = TRUE )
doc <- addPlot(doc, function() print(plot.metric.2011), vector.graphic = FALSE )
writeDoc(doc, file = "editable-normalisedCityScore")
writeDoc(doc, file = "editable-normalisedCityScore.pptx")
q()
exergy.summary
class(exergy.summary)
as.data.frame(exergy.summary)
exergy.summary <- as.data.frame(exergy.summary)
exergy.summary <- melt(exergy.summary, id.vars="City")
names(exergy.summary)
names(exergy.summary) <- c("City", "Depletion", "Depletion.GDP", "Efficiency")
exergy.summary <- melt(exergy.summary, id.vars="City")
exergy.summary
melt(exergy.summary)
class(exergy.summary)
colnames(exergy.summary)
exergy.summary[1,1]
exergy.summary[1,2]
exergy.summary[1,2] * 2
class(exergy.summary[1,2])
ex.results.BJ
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
as.matrix(exergy.summary)
melt(as.matrix(exergy.summary), id.vars="City"))
melt(as.matrix(exergy.summary), id.vars="City")
jexergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
ex.results.BJ <- c("Beijing",
   signif(c(BJ.depletion/1e12, BJ.efficiency, BJ.depletion.gdp), 3))
ex.results.LDN <- c("London",
    signif(c(LDN.depletion/1e12, LDN.efficiency, LDN.depletion.gdp), 3))
ex.results.GRU <- c("Sao Paulo",
    signif(c(GRU.depletion/1e12, GRU.efficiency, GRU.depletion.gdp), 3))
BJ.efficiency <- sum(output$value.BJ, na.rm=TRUE) / sum(input$value.BJ, na.rm=TRUE) * 100 # %
LDN.efficiency <- sum(output$value.LDN, na.rm=TRUE) / sum(input$value.LDN, na.rm=TRUE) * 100 # %
GRU.efficiency <- sum(output$value.GRU, na.rm=TRUE) / sum(input$value.GRU, na.rm=TRUE) * 100 # %
ex.results.BJ <- c("Beijing",
   signif(c(BJ.depletion/1e12, BJ.efficiency, BJ.depletion.gdp), 3))
ex.results.LDN <- c("London",
    signif(c(LDN.depletion/1e12, LDN.efficiency, LDN.depletion.gdp), 3))
ex.results.GRU <- c("Sao Paulo",
    signif(c(GRU.depletion/1e12, GRU.efficiency, GRU.depletion.gdp), 3))
BJ.depletion <- sum(input$value.BJ, na.rm=TRUE)
LDN.depletion <- sum(input$value.LDN, na.rm=TRUE)
GRU.depletion <- sum(input$value.GRU, na.rm=TRUE)
BJ.depletion.gdp <- BJ.depletion / BJ.gdp
LDN.depletion.gdp <- LDN.depletion / LDN.gdp
GRU.depletion.gdp <- GRU.depletion / GRU.gdp
BJ.efficiency <- sum(output$value.BJ, na.rm=TRUE) / sum(input$value.BJ, na.rm=TRUE) * 100 # %
LDN.efficiency <- sum(output$value.LDN, na.rm=TRUE) / sum(input$value.LDN, na.rm=TRUE) * 100 # %
GRU.efficiency <- sum(output$value.GRU, na.rm=TRUE) / sum(input$value.GRU, na.rm=TRUE) * 100 # %
ex.results.BJ <- c("Beijing",
   signif(c(BJ.depletion/1e12, BJ.efficiency, BJ.depletion.gdp), 3))
ex.results.LDN <- c("London",
    signif(c(LDN.depletion/1e12, LDN.efficiency, LDN.depletion.gdp), 3))
ex.results.GRU <- c("Sao Paulo",
    signif(c(GRU.depletion/1e12, GRU.efficiency, GRU.depletion.gdp), 3))
BJ.gdp <- cities.flows %>%
  filter(City=="Beijing" & Year=="2006" & variable=="gdp.ppp") %>%
  select(value)
LDN.gdp <- cities.flows %>%
  filter(City=="London" & Year=="2006" & variable=="gdp.ppp") %>%
  select(value)
GRU.gdp <- cities.flows %>%
  filter(City=="Sao Paulo" & Year=="2006" & variable=="gdp.ppp") %>%
  select(value)
BJ.gdp <- as.numeric(BJ.gdp)
LDN.gdp <- as.numeric(LDN.gdp)
GRU.gdp <- as.numeric(GRU.gdp)
BJ.depletion <- sum(input$value.BJ, na.rm=TRUE)
LDN.depletion <- sum(input$value.LDN, na.rm=TRUE)
GRU.depletion <- sum(input$value.GRU, na.rm=TRUE)
BJ.depletion.gdp <- BJ.depletion / BJ.gdp
LDN.depletion.gdp <- LDN.depletion / LDN.gdp
GRU.depletion.gdp <- GRU.depletion / GRU.gdp
BJ.efficiency <- sum(output$value.BJ, na.rm=TRUE) / sum(input$value.BJ, na.rm=TRUE) * 100 # %
LDN.efficiency <- sum(output$value.LDN, na.rm=TRUE) / sum(input$value.LDN, na.rm=TRUE) * 100 # %
GRU.efficiency <- sum(output$value.GRU, na.rm=TRUE) / sum(input$value.GRU, na.rm=TRUE) * 100 # %
write.csv(flows, "city-exergy-results.csv")
ex.results.BJ <- c("Beijing",
   signif(c(BJ.depletion/1e12, BJ.efficiency, BJ.depletion.gdp), 3))
ex.results.LDN <- c("London",
    signif(c(LDN.depletion/1e12, LDN.efficiency, LDN.depletion.gdp), 3))
ex.results.GRU <- c("Sao Paulo",
    signif(c(GRU.depletion/1e12, GRU.efficiency, GRU.depletion.gdp), 3))
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
colnames(exergy.summary) <- c("City", 
      "Depletion $\\alpha^{in}_{ex}$ [$\\times 10^{12}$ MJ]",
      "Efficiency $\\eta_{ex}$ [\\%]",
      "$\\alpha^{in}_{ex}/\\mbox{GDP}$ [MJ/USD]")
exergy.summary.tex <- xtable(exergy.summary, caption="Results for exergy analysis for Beijing, London and Sao Paulo.\\label{tab:exergy-results}", align="lllll")
print(exergy.summary.tex,
      include.rownames=FALSE,
      sanitize.text.function=identity,
      comment = FALSE)
exergy.summary
exergy.summary
exergy.summary <- melt(exergy.summary, id.vars="City")
exergy.summary
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
exergy.summary <- melt(exergy.summary, c("City"))
exergy.summary
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
exergy.summary
colnames(exergy.summary) <- c("City", 
      "Depletion $\\alpha^{in}_{ex}$ [$\\times 10^{12}$ MJ]",
      "Efficiency $\\eta_{ex}$ [\\%]",
      "$\\alpha^{in}_{ex}/\\mbox{GDP}$ [MJ/USD]")
exergy.summary
exergy.summary <- melt(exergy.summary, c("City"))
exergy.summary
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
colnames(exergy.summary) <- c("City", 
      "Depletion $\\alpha^{in}_{ex}$ [$\\times 10^{12}$ MJ]",
      "Efficiency $\\eta_{ex}$ [\\%]",
      "$\\alpha^{in}_{ex}/\\mbox{GDP}$ [MJ/USD]")
exergy.summary <- melt(exergy.summary)
exergy.summary
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
colnames(exergy.summary) <- c("City", 
      "Depletion $\\alpha^{in}_{ex}$ [$\\times 10^{12}$ MJ]",
      "Efficiency $\\eta_{ex}$ [\\%]",
      "$\\alpha^{in}_{ex}/\\mbox{GDP}$ [MJ/USD]")
exergy.summary <- melt(exergy.summary, varnames=c("City"))
exergy.summary
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
colnames(exergy.summary) <- c("City", 
      "Depletion $\\alpha^{in}_{ex}$ [$\\times 10^{12}$ MJ]",
      "Efficiency $\\eta_{ex}$ [\\%]",
      "$\\alpha^{in}_{ex}/\\mbox{GDP}$ [MJ/USD]")
exergy.summary.tex <- xtable(exergy.summary, caption="Results for exergy analysis for Beijing, London and Sao Paulo.\\label{tab:exergy-results}", align="lllll")
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
colnames(exergy.summary) <- c("City", 
      "Depletion $\\alpha^{in}_{ex}$ [$\\times 10^{12}$ MJ]",
      "Efficiency $\\eta_{ex}$ [\\%]",
      "$\\alpha^{in}_{ex}/\\mbox{GDP}$ [MJ/USD]")
exergy.summary
exergy.summary <- melt(exergy.summary, id=c("City"))
exergy.summary
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
colnames(exergy.summary) <- c("City", 
      "Depletion $\\alpha^{in}_{ex}$ [$\\times 10^{12}$ MJ]",
      "Efficiency $\\eta_{ex}$ [\\%]",
      "$\\alpha^{in}_{ex}/\\mbox{GDP}$ [MJ/USD]")
exergy.summary
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
exergy.summary
as.data.frame(exergy.summary)
melt(as.data.frame(exergy.summary))
foo <- as.data.frame(exergy.summary)
foo
melt(foo)
melt(foo, c("V1"))
exergy.summary.plotData <- as.data.frame(exergy.summary)
colnames(exergy.summary.plotData) <- c("City", "Depletion", "Efficiency", "Depletion.GDP")
exergy.summary.plotData
exergy.summary.plotData <- melt(exergy.summary, c("City"))
exergy.summary.plotData
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
exergy.summary.plotData <- as.data.frame(exergy.summary) # For use in generating a plot of the exergy results for each city (for PowerPoint)
colnames(exergy.summary.plotData) <- c("City", "Depletion", "Efficiency", "Depletion.GDP")
exergy.summary.plotData <- melt(exergy.summary, c("City"))
exergy.summary.plotData
exergy.summary.plotData <- melt(exergy.summary.plotData, c("City"))
exergy.summary.plotData
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
exergy.summary.plotData <- as.data.frame(exergy.summary) # For use in generating a plot of the exergy results for each city (for PowerPoint)
colnames(exergy.summary.plotData) <- c("City", "Depletion", "Efficiency", "Depletion.GDP")
exergy.summary.plotData <- melt(exergy.summary.plotData, c("City"))
exergy.summary.plotData
exergy.plot <- ggplot(exergy.summary.plotData, aes(City, value)) +
  geom_bar()
exergy.plot
exergy.summary.plotData <- melt(exergy.summary.plotData, c("City"))
exergy.plot <- ggplot(exergy.summary.plotData, aes(City, value)) +
  geom_bar(stat="identity")
exergy.plot
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
exergy.summary.plotData <- as.data.frame(exergy.summary) # For use in generating a plot of the exergy results for each city (for PowerPoint)
colnames(exergy.summary.plotData) <- c("City", "Depletion", "Efficiency", "Depletion.GDP")
exergy.summary.plotData <- melt(exergy.summary.plotData, c("City"))
exergy.plot <- ggplot(exergy.summary.plotData, aes(City, value)) +
  geom_bar(stat="identity") +
  facet_wrap( ~ variable, ncol=3)
exergy.plot
exergy.plot <- ggplot(exergy.summary.plotData, aes(City, value)) +
  geom_bar(stat="identity") +
  coord_flip() + 
  facet_wrap( ~ variable, ncol=3)
exergy.plot
exergy.plot <- ggplot(exergy.summary.plotData, aes(City, value)) +
  geom_bar(stat="identity") +
  coord_flip() + 
  facet_wrap( ~ variable, ncol=3, scales="free_x")
exergy.plot
exergy.plot <- ggplot(exergy.summary.plotData, aes(City, value)) +
  geom_bar(stat="identity") +
  coord_flip() + 
  facet_wrap( ~ variable, ncol=3, scales="free_y")
exergy.plot
exergy.plot <- ggplot(exergy.summary.plotData, aes(City, value)) +
  geom_bar(stat="identity") +
  coord_flip() + 
  facet_wrap( ~ variable, ncol=3, scales="free")
exergy.plot
exergy.summary.plotData <- melt(exergy.summary.plotData, c("City"))
exergy.plot <- ggplot(exergy.summary.plotData, aes(City, value)) +
  geom_bar(stat="identity") +
  coord_flip() + 
  facet_wrap( ~ variable, ncol=3)
exergy.plot
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
exergy.summary.plotData <- as.data.frame(exergy.summary) # For use in generating a plot of the exergy results for each city (for PowerPoint)
colnames(exergy.summary.plotData) <- c("City", "Depletion", "Efficiency", "Depletion.GDP")
exergy.summary.plotData <- melt(exergy.summary.plotData, c("City"))
exergy.plot <- ggplot(exergy.summary.plotData, aes(City, value)) +
  geom_bar(stat="identity") +
  coord_flip() + 
  facet_wrap( ~ variable, ncol=3)
exergy.plot
exergy.plot <- ggplot(exergy.summary.plotData, aes(value, City)) +
  geom_bar(stat="identity") +
#  coord_flip() + 
  facet_wrap( ~ variable, ncol=3)
exergy.plot
exergy.plot <- ggplot(exergy.summary.plotData, aes(value, City)) +
  geom_bar(stat="identity") +
#  coord_flip() + 
  facet_wrap( ~ variable, ncol=3, scales="free")
exergy.plot
exergy.summary.plotData <- melt(exergy.summary.plotData, c("City"))
exergy.plot <- ggplot(exergy.summary.plotData, aes(value, City)) +
  geom_bar(stat="identity") +
#  coord_flip() + 
  facet_wrap( ~ variable, ncol=3, scales="free_x")
exergy.plot
## Tabulate summary
exergy.summary <- rbind(ex.results.BJ, ex.results.LDN, ex.results.GRU)
exergy.summary.plotData <- as.data.frame(exergy.summary) # For use in generating a plot of the exergy results for each city (for PowerPoint)
colnames(exergy.summary.plotData) <- c("City", "Depletion", "Efficiency", "Depletion.GDP")
exergy.summary.plotData <- melt(exergy.summary.plotData, c("City"))
exergy.plot <- ggplot(exergy.summary.plotData, aes(value, City)) +
  geom_bar(stat="identity") +
#  coord_flip() + 
  facet_wrap( ~ variable, ncol=3, scales="free_x")
exergy.plot
exergy.plot <- ggplot(exergy.summary.plotData, aes(value, City)) +
  geom_bar(stat="identity") +
  facet_wrap( ~ variable, ncol=3, scales="free_x") +
  theme_bw()
exergy.plot
exergy.plot <- ggplot(exergy.summary.plotData, aes(value, City)) +
#  geom_bar(stat="identity") +
  geom_bar() +
  facet_wrap( ~ variable, ncol=3, scales="free_x") +
  theme_bw()
exergy.plot
exergy.plot <- ggplot(exergy.summary.plotData, aes(value, City)) +
#  geom_bar(stat="identity") +
  geom_bar(stat="bin") +
  facet_wrap( ~ variable, ncol=3, scales="free_x") +
  theme_bw()
exergy.plot
exergy.plot <- ggplot(exergy.summary.plotData, aes(value, City)) +
  geom_bar(stat="identity") +
  facet_wrap( ~ variable, ncol=3, scales="free_x") +
  theme_bw()
exergy.plot
exergy.plot <- ggplot(exergy.summary.plotData, aes(City, value)) +
  geom_bar(stat="identity") +
  facet_wrap( ~ variable, ncol=3, scales="free_x") +
  theme_bw()
exergy.plot
exergy.plot <- ggplot(exergy.summary.plotData, aes(City, value)) +
  geom_bar(stat="identity") +
  facet_wrap( ~ variable, ncol=3, scales="free") +
  theme_bw()
exergy.plot
## Make PowerPoint version of exergy.plot
doc <- pptx()
doc <- addSlide(doc, "Two Content")
doc <- addPlot(doc, function() print(exergy.plot), vector.graphic = TRUE )
doc <- addPlot(doc, function() print(exergy.plot), vector.graphic = FALSE )
writeDoc(doc, file = "editable-exergyPlot.pptx")
q()
cor.test.p <- function(x){
  FUN <- function(x, y) cor.test(x, y, method="spearman")[["p.value"]]
  z <- outer(
    colnames(x), 
    colnames(x), 
    Vectorize(function(i,j) FUN(x[,i], x[,j]))
  )
  dimnames(z) <- list(colnames(x), colnames(x))
  z
}
p.2001
q()
U.BJ
22/68
q()
