  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
  ylab("Value [units x 10^6]") +
  facet_wrap(~variable, ncol=1)
plot_wolman
5 / 1.61
q()
plot_open_data
library('ReporteRs')
doc <- pptx()
doc <- addSlide("Two Content")
doc <- addSlide(doc, "Two Content")
doc <- addPlot(doc, function(), print(plot_open_data), vector.graphic = TRUE)
doc <- addPlot(doc, function(), print(plot_open_data), vector.graphic = TRUE)
doc <- addPlot(doc, function() print(plot_open_data), vector.graphic = TRUE)
doc <- addPlot(doc, function() print(plot_open_data), vector.graphic = FALSE)
writeDoc(doc, file = "word-files/open_data.pptx")
writeDoc(doc, file = "word-figures/open_data.pptx")
en_dot <- ggplot(processes_CH4, aes(value, plot_name.y)) +
  theme_bw() +
  theme(axis.text.y = element_text(size=8),
axis.title.y = element_blank(),
strip.text = element_text(size=8)) +
  geom_point() +
  xlab("Quantity [kg or MJ]") +
  geom_vline(xintercept=0) +
  facet_wrap(~ plot_name.x, ncol=2) +
  geom_text(aes(x=-23, y=1.5, label=TRL_name), size=3, hjust=0)
en_dot
## Methane processes
doc <- pptx()
doc <- addSlide(doc, "Two Content")
doc <- addPlot(doc, function() print(en_dot), vector.graphic = TRUE)
doc <- addPlot(doc, function() print(en_dot), vector.graphic = FALSE)
writeDoc(doc, file = "word-figures/methane-processes.pptx")
## Open data research
doc <- pptx()
doc <- addSlide(doc, "Two Content")
doc <- addPlot(doc, function() print(plot_open_data), vector.graphic = TRUE)
doc <- addPlot(doc, function() print(plot_open_data), vector.graphic = FALSE)
writeDoc(doc, file = "word-figures/open-data.pptx")
## Wolman optimisation
doc <- pptx()
doc <- addSlide(doc, "Two Content")
doc <- addPlot(doc, function() print(plot_wolman), vector.graphic = TRUE)
doc <- addPlot(doc, function() print(plot_wolman), vector.graphic = FALSE)
writeDoc(doc, file = "word-figures/optimised-wolman")
## Wolman optimisation
doc <- pptx()
doc <- addSlide(doc, "Two Content")
doc <- addPlot(doc, function() print(plot_wolman), vector.graphic = TRUE)
doc <- addPlot(doc, function() print(plot_wolman), vector.graphic = FALSE)
writeDoc(doc, file = "word-figures/optimised-wolman.pptx")
q()
open_data <- read.csv("open-data-research.csv")
rate <- fitdistr(open_data$Number, "exponential")
library(MASS)
library(dplyr)
open_data <- filter(open_data, Year>=1995)
open_data
write.csv(open_data, "foo.csv")
q()
c(1995:2014)
year <- c(1995:2014)
number <- c(5, 14, 5, 3, 4, 7, 15, 16, 13, 18, 19Â¸ 28, 293, 69, 148, 230, 424, 618, 759)
number <- c(5, 14, 5, 3, 4, 7, 15, 16, 13, 18, 19, 28, 293, 69, 148, 230, 424, 618, 759)
data.frame(year, number)
number <- c(5, 14, 5, 3, 4, 7, 15, 16, 13, 18, 19, 28, 29, 43, 69, 148, 230, 424, 618, 759)
data.frame(year, number)
open_data <- data.frame(year, number)
library(ggplot2)
plot_open_data <- ggplot(open_data, aes(Year, Number)) +
  theme_bw() +
  ylab('Number of publications') +
  theme(axis.title.x = element_blank()) +
  geom_point()
plot_open_data
library(ggplot2)
plot_open_data <- ggplot(open_data, aes(year, number)) +
  theme_bw() +
  ylab('Number of publications') +
  theme(axis.title.x = element_blank()) +
  geom_point()
plot_open_data
library('ReporteRs')
doc <- addSlide(doc, "Two Content")
doc <- pptx()
doc <- addSlide(doc, "Two Content")
doc <- addPlot(doc, function() print(plot_open_data), vector.graphic = TRUE)
doc <- addPlot(doc, function() print(plot_open_data), vector.graphic = FALSE)
writeDoc(doc, file = "open-data.pptx")
q()
library(knitr)
purl("paper.Rmd")
q()
base::source("/tmp/r-plugin-tr608/Rsource-7215-paper.R")
base::source("/tmp/r-plugin-tr608/Rsource-7215-paper.R")
base::source("/tmp/r-plugin-tr608/Rsource-7215-paper.R")
base::source("/tmp/r-plugin-tr608/Rsource-7215-paper.R")
ggsave("open-data-submission.pdf", plot_open_data, with=8cm)
ggsave("open-data-submission.pdf", plot_open_data, width=8cm)
ggsave(plot_open_data, file="open-data-submission.pdf", width=8cm)
plot_open_data
ggsave(plot_open_data, file="open-data-submission.pdf", width=8cm)
ggsave(plot_open_data, file="open-data-submission.pdf", width=8, units="cm")
ggsave(plot_open_data, file="open-data-submission.pdf", width=8, height=12.9units="cm")
ggsave(plot_open_data, file="open-data-submission.pdf", width=8, height=12.9, units="cm")
ggsave(plot_open_data, file="open-data-submission.pdf", width=8, height=4.94, units="cm")
plot_open_data <- ggplot(open_data, aes(Year, Number)) +
  theme_bw() +
  ylab('No. of publications') +
  theme(axis.title.x = element_blank()) +
  geom_point()
plot_open_data
ggsave(plot_open_data, file="open-data-submission.pdf", width=8, height=4.94, units="cm")
ggsave(plot_open_data, file="open-data-submission.pdf", width=8, height=4.94, units="cm", dpi=600)
?pdfFonts
en_dot
ggsave(en_dot, file="open-data-submission.pdf", width=16.3, units="cm", dpi=600)
ggsave(en_dot, file="comparison-submission.pdf", width=16.3, units="cm", dpi=600)
ggsave(en_dot, file="comparison-submission.pdf", width=16.3, height=10.1, units="cm", dpi=600)
en_dot <- ggplot(processes_CH4, aes(value, plot_name.y)) +
  theme_bw() +
  theme(axis.text.y = element_text(size=7),
axis.title.y = element_blank(),
strip.text = element_text(size=8)) +
  geom_point() +
  xlab("Quantity [kg or MJ]") +
  geom_vline(xintercept=0) +
  facet_wrap(~ plot_name.x, ncol=2) +
  geom_text(aes(x=-23, y=1.5, label=TRL_name), size=3, hjust=0)
en_dot
ggsave(en_dot, file="comparison-submission.pdf", width=16.3, height=10.1, units="cm", dpi=600)
q()
base::source("/tmp/r-plugin-tr608/Rsource-11659-paper.R")
ggsave(plot_wolman, file="wolman-submission.pdf", width=8, height=4.94, units="cm", dpi=600)
ggsave(plot_wolman, file="wolman-submission.pdf", width=8, height=12.9, units="cm", dpi=600)
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
  ylab(bquote('Value [units x 10*^-6*')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Assimilation ('*mu~ 'mol' ~CO[2]~ m^-2~s^-1*')')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value ['*mu~ 'mol' ~CO[2]~ m^-2~s^6*']')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value [' ~CO[2]~ m^-2~s^6*']')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value [' ~10~ m^-2~s^6*']')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value [' ~10~ ~s^6*']')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value [' ~10~ ^6*']')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value [' ~10^6*']')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value [' ~10^6*~']')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value [ units' ~10^6*~']')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value [ units' %*% ~10^6*~']')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value [ units' %*% 10^6*~']')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value [ units' %*% 10^6*']')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value ( units' %*% 10^6*~')')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value ( units' %*% 10^6*')')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab("Value [units x 10^6]") +
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value (units' %*% 10^6*')')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
ggsave(plot_wolman, file="wolman-submission.pdf", width=8, height=12.9, units="cm", dpi=600)
plot_wolman <- ggplot(wolman, aes(resource, -value/1e6)) +
  theme_bw() +
#  geom_bar(stat="identity") +
  geom_point() +
  geom_hline(xintercept=0) +
  coord_flip() +
  xlab("Resource (units)") + 
#  ylab(bquote('Value [units x 10*^-6*')) +
  ylab(bquote('Value (units' %*% 10^6*')')) +
  facet_wrap(~variable, ncol=1)
plot_wolman
ggsave(plot_wolman, file="wolman-submission.pdf", width=8, height=12.9, units="cm", dpi=600)
base::source("resource-network.R")
resource_sectors <- read.csv("resources-sector.csv")
sectors_lookup <- rbind(c("energy", "blue"),
c("water", "red"),
c("waste", "black"),
c("other", "green"))
sectors_lookup <- data.frame(sectors_lookup)
colnames(sectors_lookup) <- c("sector", "node_vector")
resources_sectors_node <- inner_join(resource_sectors, sectors_lookup)
node_vector <- c(resources_sectors_node$node_vector)
layout <-  c("fruchtermanreingold", "kamadakawai", "spring", "circle", "eigen", "hall", "mds", "princoord", "target")
nw_plot <- gplot(link_matrix,
      mode=layout[1],
      gmode="graph",
      label = resources,
      label.pos = 1,
      jitter=FALSE,
#      arrowhead = FALSE,
      thresh=0,
#      vertex.sides = 0,
      vertex.col = node_vector,
      edge.col = rgb(220, 217, 217, maxColorValue=255),
      displaylabels = TRUE)
library(gplot)
library("gplot")
library("gplots")
library("sna")
nw_plot <- gplot(link_matrix,
      mode=layout[1],
      gmode="graph",
      label = resources,
      label.pos = 1,
      jitter=FALSE,
#      arrowhead = FALSE,
      thresh=0,
#      vertex.sides = 0,
      vertex.col = node_vector,
      edge.col = rgb(220, 217, 217, maxColorValue=255),
      displaylabels = TRUE)
nw_plot <- gplot(link_matrix,
      mode=layout[1],
      gmode="graph",
      label = resources,
      label.pos = 1,
      jitter=FALSE,
#      arrowhead = FALSE,
      thresh=0,
#      vertex.sides = 0,
      vertex.col = node_vector,
      edge.col = rgb(220, 217, 217, maxColorValue=255),
      displaylabels = TRUE)
nw_plot <- gplot(link_matrix,
      mode=layout[1],
      gmode="graph",
      label = resources,
      label.pos = 1,
      jitter=FALSE,
#      arrowhead = FALSE,
      thresh=0,
#      vertex.sides = 0,
      vertex.col = node_vector,
      edge.col = rgb(220, 217, 217, maxColorValue=255),
      displaylabels = TRUE)
nw_plot <- gplot(link_matrix,
      mode=layout[1],
      gmode="graph",
      label = resources,
      label.pos = 1,
      jitter=FALSE,
#      arrowhead = FALSE,
      thresh=0,
#      vertex.sides = 0,
      vertex.col = node_vector,
      edge.col = rgb(220, 217, 217, maxColorValue=255),
      displaylabels = TRUE)
ggsave(nw_plot, file="network-submission.pdf", width=16.3, height=10.1, units="cm", dpi=600)
q()
en_dot <- ggplot(processes_CH4, aes(value, plot_name.y)) +
  theme_bw() +
  theme(axis.text.y = element_text(size=6),
axis.title.y = element_blank(),
strip.text = element_text(size=8)) +
  geom_point() +
  xlab("Quantity [kg or MJ]") +
  geom_vline(xintercept=0) +
  facet_wrap(~ plot_name.x, ncol=2) +
  geom_text(aes(x=-23, y=1.5, label=TRL_name), size=3, hjust=0)
en_dot
ggsave(en_dot, file="comparison-submission.pdf", width=16.3, height=10.1, units="cm", dpi=600)
base::source("/tmp/r-plugin-tr608/Rsource-5180-paper.R")
base::source("/tmp/r-plugin-tr608/Rsource-5180-paper.R")
library(extrafont)
font_import(pattern="LinBiolinum")
open_data <- read.csv("open-data-research.csv")
library(MASS)
rate <- fitdistr(open_data$Number, "exponential")
library(dplyr)
open_data <- filter(open_data, Year>=1995)
library(ggplot2)
plot_open_data <- ggplot(open_data, aes(Year, Number)) +
  theme_bw() +
  ylab('Publications') +
  theme(axis.title.x = element_blank()) +
  geom_point()
plot_open_data
ggsave(plot_open_data, file="open-data-submission.pdf", width=8, height=4.94, units="cm", dpi=600)
processes <- read.csv("../yaml/normalised/processes-analysis.csv")
processes$sign <- "Input"
processes[processes$value>0, ]$sign <- "Output"
lookup <- filter(processes, value==1)
lookup <- dplyr::select(lookup, c(process, resource))
processes <- inner_join(processes, lookup, by="process")
colnames(processes)[colnames(processes)=="resource.x"] <- "resource"
colnames(processes)[colnames(processes)=="resource.y"] <- "mainOutput"
processes <- processes[,c("process",
 "process.name", 
 "capacity", 
 "TRL", 
 "resource",
 "unit",
 "value",
 "sign",
 "mainOutput")]
processes <- unique(processes) # TODO: fudge required, due to the duplication of each row when using inner_join (not sure why), so try and fix this.
write.csv(processes, "shiny-processes.csv")
processes_CH4 <- filter(processes,
mainOutput=="methane",
capacity %in% c(0.24, 0.0001319, 0.122))
plot_names_processes <- read.csv("../yaml/normalised/plot_names_processes.csv")
plot_names_resources <- read.csv("../yaml/normalised/plot_names_resources.csv")
processes_CH4 <- inner_join(processes_CH4, plot_names_processes, by="process")
processes_CH4 <- inner_join(processes_CH4, plot_names_resources, by="resource")
processes_CH4$TRL <- factor(processes_CH4$TRL,
    levels = c("c", "r", "m", "l")) # More appropriate order for the facets of the plot
TRL <- c("c", "r", "m", "l")
pts <- chunk$set(fig.path = "figures/", dev=c("cairo_pdf"), fig.pos='htbp', fig.width=5, fig.height=1.6, dpi=700, fig.show='hold', fig.lp="fig:", cache=FALSE, par=TRUE, echo=FALSE, results="hide", message=FALSE, warning=FALSE)
TRL <- c("c", "r", "m", "l")
TRL_name <- c("current", "rare", "medium-term", "long-term")
TRL_name_lookup <- data.frame(TRL, TRL_name)
processes_CH4 <- inner_join(processes_CH4, TRL_name_lookup, by="TRL")
en_dot <- ggplot(processes_CH4, aes(value, plot_name.y)) +
  theme_bw() +
  theme(axis.text.y = element_text(size=7),
axis.title.y = element_blank(),
strip.text = element_text(size=8)) +
  geom_point() +
  xlab("Quantity [kg or MJ]") +
  geom_vline(xintercept=0) +
  facet_wrap(~ plot_name.x, ncol=2) +
  geom_text(aes(x=-23, y=1.5, label=TRL_name), size=3, hjust=0)
en_dot
ggsave(en_dot, file="comparison-submission.pdf", width=16.3, height=10.1, units="cm", dpi=600)
en_dot <- ggplot(processes_CH4, aes(value, plot_name.y)) +
  theme_bw() +
  theme(axis.text.y = element_text(size=6),
axis.title.y = element_blank(),
strip.text = element_text(size=8)) +
  geom_point() +
  xlab("Quantity [kg or MJ]") +
  geom_vline(xintercept=0) +
  facet_wrap(~ plot_name.x, ncol=2) +
  geom_text(aes(x=-23, y=1.5, label=TRL_name), size=3, hjust=0)
en_dot
ggsave(en_dot, file="comparison-submission.pdf", width=16.3, height=10.1, units="cm", dpi=600)
base::source("/tmp/r-plugin-tr608/Rsource-5180-paper.R")
q()(
q()
